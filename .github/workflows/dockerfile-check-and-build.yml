name: Build and Tag Docker Images

on:
  push:
    paths:
      - '**/dockerfile' # 监听所有更改的 Dockerfile

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 获取 Commit 信息
      - name: Get Commit Info
        id: commit_info
        run: |
          echo "Extracting commit info..."
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "::set-output name=message::$COMMIT_MESSAGE"
          echo "::set-output name=hash::$COMMIT_HASH"

      # Step 3: 检测更改的 Dockerfile
      - name: Detect changed Dockerfiles
        id: changed_files
        run: |
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.before }} ${{ github.sha }} | grep 'Dockerfile' || true)
          echo "::set-output name=files::$CHANGED_FILES"

      # Step 4: 构建和推送每个 Dockerfile 对应的镜像
      - name: Build and Push Docker Images
        if: steps.changed_files.outputs.files != ''
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/$(dirname ${{ matrix.file }}) # 构建路径
          file: ${{ github.workspace }}/${{ matrix.file }} # Dockerfile 路径
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/$(dirname ${{ matrix.file }}):${{ steps.commit_info.outputs.hash }}
            ghcr.io/${{ github.repository_owner }}/$(dirname ${{ matrix.file }}):latest # 可选，默认latest

    strategy:
      matrix:
        file: ${{ fromJSON(steps.changed_files.outputs.files) }} # 遍历更改的 Dockerfile
